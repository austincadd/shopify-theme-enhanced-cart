<!doctype html>
<html class="js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}
    
    <!-- Def Audio Brand Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}

    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>
    
    <!-- Single Page Layout CSS -->
    {{ 'single-page-basic.css' | asset_url | stylesheet_tag }}
    
    <!-- Def Audio Animation Libraries -->
    <script src="https://cdn.skypack.dev/gsap@3.12.2" defer></script>
    <script src="https://cdn.skypack.dev/gsap@3.12.2/ScrollTrigger" defer></script>
    <script src="https://cdn.skypack.dev/swup@3.0.6" defer></script>
    <script src="{{ 'animations.js' | asset_url }}" defer="defer"></script>

    {%- if settings.animations_reveal_on_scroll -%}
      <script src="{{ 'animations.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {{ content_for_header }}
  
  <!-- Cyberpunk Particle System -->
  <div class="cyber-particles" id="cyber-particles"></div>
  
  <script>
        // Create professional floating particles
        function createParticles() {
          const particlesContainer = document.getElementById('cyber-particles');
          const particleCount = 15; // Reduced for more professional look
          
          for (let i = 0; i < particleCount; i++) {
            const particle = document.createElement('div');
            particle.className = 'particle';
            particle.style.left = Math.random() * 100 + '%';
            particle.style.animationDelay = Math.random() * 30 + 's';
            particle.style.animationDuration = (25 + Math.random() * 15) + 's';
            particle.style.opacity = (0.2 + Math.random() * 0.3).toString();
            particlesContainer.appendChild(particle);
          }
        }
    
    // Initialize particles when page loads
    document.addEventListener('DOMContentLoaded', createParticles);
  </script>

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      {% for scheme in settings.color_schemes -%}
        {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
        {% if forloop.index == 1 -%}
          :root,
        {%- endif %}
        .color-{{ scheme.id }} {
          --color-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        {% if scheme.settings.background_gradient != empty %}
          --gradient-background: {{ scheme.settings.background_gradient }};
        {% else %}
          --gradient-background: {{ scheme.settings.background }};
        {% endif %}

        {% liquid
          assign background_color = scheme.settings.background
          assign background_color_brightness = background_color | color_brightness
          if background_color_brightness <= 26
            assign background_color_contrast = background_color | color_lighten: 50
          elsif background_color_brightness <= 65
            assign background_color_contrast = background_color | color_lighten: 5
          else
            assign background_color_contrast = background_color | color_darken: 25
          endif
        %}

        --color-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --color-background-contrast: {{ background_color_contrast.red }},{{ background_color_contrast.green }},{{ background_color_contrast.blue }};
        --color-shadow: {{ scheme.settings.shadow.red }},{{ scheme.settings.shadow.green }},{{ scheme.settings.shadow.blue }};
        --color-button: {{ scheme.settings.button.red }},{{ scheme.settings.button.green }},{{ scheme.settings.button.blue }};
        --color-button-text: {{ scheme.settings.button_label.red }},{{ scheme.settings.button_label.green }},{{ scheme.settings.button_label.blue }};
        --color-secondary-button: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        --color-secondary-button-text: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
        --color-link: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
        --color-badge-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --color-badge-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        --color-badge-border: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --payment-terms-background-color: rgb({{ scheme.settings.background.rgb }});
      }
      {% endfor %}

      {{ scheme_classes | prepend: 'body' }} {
        color: rgb(var(--color-foreground));
        background-color: rgb(var(--color-background));
      }

      /* Professional Glowing Background */
      body {
        position: relative;
        background: 
          radial-gradient(circle at 20% 80%, var(--glow-primary) 0%, transparent 50%),
          radial-gradient(circle at 80% 20%, var(--glow-secondary) 0%, transparent 50%),
          radial-gradient(circle at 40% 40%, var(--glow-purple) 0%, transparent 50%),
          radial-gradient(circle at 60% 60%, var(--glow-orange) 0%, transparent 40%),
          radial-gradient(circle at 10% 30%, var(--glow-pink) 0%, transparent 35%),
          radial-gradient(circle at 90% 70%, var(--glow-cyan) 0%, transparent 45%),
          linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 25%, #0f0f0f 50%, #1a1a1a 75%, #0a0a0a 100%);
        background-attachment: fixed;
        min-height: 100vh;
        overflow-x: hidden;
        animation: backgroundShift 60s ease-in-out infinite;
      }

      @keyframes backgroundShift {
        0%, 100% {
          background-position: 0% 0%, 100% 100%, 50% 50%, 80% 20%, 20% 80%, 70% 30%, 0% 0%;
        }
        25% {
          background-position: 20% 20%, 80% 80%, 30% 70%, 60% 40%, 40% 60%, 50% 50%, 0% 0%;
        }
        50% {
          background-position: 40% 40%, 60% 60%, 70% 30%, 40% 60%, 60% 40%, 30% 70%, 0% 0%;
        }
        75% {
          background-position: 60% 60%, 40% 40%, 50% 50%, 20% 80%, 80% 20%, 70% 30%, 0% 0%;
        }
      }

      /* Animated Glow Orbs */
      body::before {
        content: '';
        position: fixed;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: 
          radial-gradient(circle at 30% 70%, var(--glow-primary) 0%, transparent 30%),
          radial-gradient(circle at 70% 30%, var(--glow-secondary) 0%, transparent 30%),
          radial-gradient(circle at 50% 50%, var(--glow-accent) 0%, transparent 40%),
          radial-gradient(circle at 80% 60%, var(--glow-orange) 0%, transparent 25%),
          radial-gradient(circle at 20% 20%, var(--glow-pink) 0%, transparent 20%);
        animation: floatGlow 20s ease-in-out infinite, colorShift 15s ease-in-out infinite;
        pointer-events: none;
        z-index: -1;
      }

      body::after {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: 
          radial-gradient(circle at 60% 20%, var(--glow-purple) 0%, transparent 25%),
          radial-gradient(circle at 20% 60%, var(--glow-accent) 0%, transparent 25%),
          radial-gradient(circle at 90% 80%, var(--glow-cyan) 0%, transparent 30%),
          radial-gradient(circle at 10% 90%, var(--glow-orange) 0%, transparent 20%);
        animation: floatGlow 25s ease-in-out infinite reverse, colorShift 18s ease-in-out infinite reverse;
        pointer-events: none;
        z-index: -1;
      }

      @keyframes floatGlow {
        0%, 100% {
          transform: translate(0, 0) rotate(0deg);
          opacity: 0.3;
        }
        25% {
          transform: translate(20px, -30px) rotate(90deg);
          opacity: 0.6;
        }
        50% {
          transform: translate(-10px, -20px) rotate(180deg);
          opacity: 0.4;
        }
        75% {
          transform: translate(-30px, 10px) rotate(270deg);
          opacity: 0.7;
        }
      }

      @keyframes colorShift {
        0%, 100% {
          filter: hue-rotate(0deg) saturate(1) brightness(1);
        }
        25% {
          filter: hue-rotate(90deg) saturate(1.2) brightness(1.1);
        }
        50% {
          filter: hue-rotate(180deg) saturate(0.8) brightness(0.9);
        }
        75% {
          filter: hue-rotate(270deg) saturate(1.1) brightness(1.05);
        }
      }

      /* Subtle Grid Overlay */
      .cyber-particles {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
        background-image: 
          linear-gradient(rgba(74, 158, 255, 0.03) 1px, transparent 1px),
          linear-gradient(90deg, rgba(74, 158, 255, 0.03) 1px, transparent 1px),
          linear-gradient(rgba(0, 255, 150, 0.02) 1px, transparent 1px),
          linear-gradient(90deg, rgba(0, 255, 150, 0.02) 1px, transparent 1px);
        background-size: 50px 50px, 50px 50px, 100px 100px, 100px 100px;
        animation: gridMove 30s linear infinite, gridColorShift 20s ease-in-out infinite;
      }

      @keyframes gridMove {
        0% { transform: translate(0, 0); }
        100% { transform: translate(50px, 50px); }
      }

      @keyframes gridColorShift {
        0%, 100% {
          filter: hue-rotate(0deg) opacity(1);
        }
        25% {
          filter: hue-rotate(90deg) opacity(0.8);
        }
        50% {
          filter: hue-rotate(180deg) opacity(0.6);
        }
        75% {
          filter: hue-rotate(270deg) opacity(0.9);
        }
      }

      .particle {
        position: absolute;
        width: 2px;
        height: 2px;
        background: var(--glow-primary);
        border-radius: 50%;
        animation: particleFloat 30s linear infinite, particleColorShift 25s ease-in-out infinite;
        box-shadow: 0 0 6px var(--glow-primary);
      }

      @keyframes particleFloat {
        0% {
          transform: translateY(100vh) translateX(0);
          opacity: 0;
        }
        10% {
          opacity: 1;
        }
        90% {
          opacity: 1;
        }
        100% {
          transform: translateY(-100px) translateX(100px);
          opacity: 0;
        }
      }

      @keyframes particleColorShift {
        0%, 100% {
          background: var(--glow-primary);
          box-shadow: 0 0 6px var(--glow-primary);
        }
        20% {
          background: var(--glow-secondary);
          box-shadow: 0 0 8px var(--glow-secondary);
        }
        40% {
          background: var(--glow-purple);
          box-shadow: 0 0 6px var(--glow-purple);
        }
        60% {
          background: var(--glow-orange);
          box-shadow: 0 0 8px var(--glow-orange);
        }
        80% {
          background: var(--glow-cyan);
          box-shadow: 0 0 6px var(--glow-cyan);
        }
      }

      :root {
        --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};
        --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};

        --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};

        /* Professional Glow Variables */
        --glow-primary: rgba(74, 158, 255, 0.15);
        --glow-secondary: rgba(0, 255, 150, 0.1);
        --glow-accent: rgba(255, 255, 255, 0.05);
        --glow-purple: rgba(138, 43, 226, 0.08);
        --glow-orange: rgba(255, 165, 0, 0.06);
        --glow-pink: rgba(255, 20, 147, 0.05);
        --glow-cyan: rgba(0, 255, 255, 0.08);

        /* Def Audio Brand Colors */
        --tonedef-dark: #3a3d3a;
        --tonedef-forest: #1a3d2f;
        --tonedef-neon: #66ffcc;
        
        /* Def Audio Brand Fonts */
        --tonedef-heading-font: 'Poppins', 'Helvetica Neue', Arial, sans-serif;
        --tonedef-body-font: 'Inter', 'Helvetica Neue', Arial, sans-serif;

        --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
        --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

        --media-padding: {{ settings.media_padding }}px;
        --media-border-opacity: {{ settings.media_border_opacity | divided_by: 100.0 }};
        --media-border-width: {{ settings.media_border_thickness }}px;
        --media-radius: {{ settings.media_radius }}px;
        --media-shadow-opacity: {{ settings.media_shadow_opacity | divided_by: 100.0 }};
        --media-shadow-horizontal-offset: {{ settings.media_shadow_horizontal_offset }}px;
        --media-shadow-vertical-offset: {{ settings.media_shadow_vertical_offset }}px;
        --media-shadow-blur-radius: {{ settings.media_shadow_blur }}px;
        --media-shadow-visible: {% if settings.media_shadow_opacity > 0 %}1{% else %}0{% endif %};

        --page-width: {{ settings.page_width | divided_by: 10 }}rem;
        --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;

        --product-card-image-padding: {{ settings.card_image_padding | divided_by: 10.0 }}rem;
        --product-card-corner-radius: {{ settings.card_corner_radius | divided_by: 10.0 }}rem;
        --product-card-text-alignment: {{ settings.card_text_alignment }};
        --product-card-border-width: {{ settings.card_border_thickness | divided_by: 10.0 }}rem;
        --product-card-border-opacity: {{ settings.card_border_opacity | divided_by: 100.0 }};
        --product-card-shadow-opacity: {{ settings.card_shadow_opacity | divided_by: 100.0 }};
        --product-card-shadow-visible: {% if settings.card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --product-card-shadow-horizontal-offset: {{ settings.card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-vertical-offset: {{ settings.card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-blur-radius: {{ settings.card_shadow_blur | divided_by: 10.0 }}rem;

        --collection-card-image-padding: {{ settings.collection_card_image_padding | divided_by: 10.0 }}rem;
        --collection-card-corner-radius: {{ settings.collection_card_corner_radius | divided_by: 10.0 }}rem;
        --collection-card-text-alignment: {{ settings.collection_card_text_alignment }};
        --collection-card-border-width: {{ settings.collection_card_border_thickness | divided_by: 10.0 }}rem;
        --collection-card-border-opacity: {{ settings.collection_card_border_opacity | divided_by: 100.0 }};
        --collection-card-shadow-opacity: {{ settings.collection_card_shadow_opacity | divided_by: 100.0 }};
        --collection-card-shadow-visible: {% if settings.collection_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --collection-card-shadow-horizontal-offset: {{ settings.collection_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-vertical-offset: {{ settings.collection_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-blur-radius: {{ settings.collection_card_shadow_blur | divided_by: 10.0 }}rem;

        --blog-card-image-padding: {{ settings.blog_card_image_padding | divided_by: 10.0 }}rem;
        --blog-card-corner-radius: {{ settings.blog_card_corner_radius | divided_by: 10.0 }}rem;
        --blog-card-text-alignment: {{ settings.blog_card_text_alignment }};
        --blog-card-border-width: {{ settings.blog_card_border_thickness | divided_by: 10.0 }}rem;
        --blog-card-border-opacity: {{ settings.blog_card_border_opacity | divided_by: 100.0 }};
        --blog-card-shadow-opacity: {{ settings.blog_card_shadow_opacity | divided_by: 100.0 }};
        --blog-card-shadow-visible: {% if settings.blog_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --blog-card-shadow-horizontal-offset: {{ settings.blog_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-vertical-offset: {{ settings.blog_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-blur-radius: {{ settings.blog_card_shadow_blur | divided_by: 10.0 }}rem;

        --badge-corner-radius: {{ settings.badge_corner_radius | divided_by: 10.0 }}rem;

        --popup-border-width: {{ settings.popup_border_thickness }}px;
        --popup-border-opacity: {{ settings.popup_border_opacity | divided_by: 100.0 }};
        --popup-corner-radius: {{ settings.popup_corner_radius }}px;
        --popup-shadow-opacity: {{ settings.popup_shadow_opacity | divided_by: 100.0 }};
        --popup-shadow-horizontal-offset: {{ settings.popup_shadow_horizontal_offset }}px;
        --popup-shadow-vertical-offset: {{ settings.popup_shadow_vertical_offset }}px;
        --popup-shadow-blur-radius: {{ settings.popup_shadow_blur }}px;

        --drawer-border-width: {{ settings.drawer_border_thickness }}px;
        --drawer-border-opacity: {{ settings.drawer_border_opacity | divided_by: 100.0 }};
        --drawer-shadow-opacity: {{ settings.drawer_shadow_opacity | divided_by: 100.0 }};
        --drawer-shadow-horizontal-offset: {{ settings.drawer_shadow_horizontal_offset }}px;
        --drawer-shadow-vertical-offset: {{ settings.drawer_shadow_vertical_offset }}px;
        --drawer-shadow-blur-radius: {{ settings.drawer_shadow_blur }}px;

        --spacing-sections-desktop: {{ settings.spacing_sections }}px;
        --spacing-sections-mobile: {% if settings.spacing_sections < 24 %}{{ settings.spacing_sections }}{% else %}{{ settings.spacing_sections | times: 0.7 | round | at_least: 20 }}{% endif %}px;

        --grid-desktop-vertical-spacing: {{ settings.spacing_grid_vertical }}px;
        --grid-desktop-horizontal-spacing: {{ settings.spacing_grid_horizontal }}px;
        --grid-mobile-vertical-spacing: {{ settings.spacing_grid_vertical | divided_by: 2 }}px;
        --grid-mobile-horizontal-spacing: {{ settings.spacing_grid_horizontal | divided_by: 2 }}px;

        --text-boxes-border-opacity: {{ settings.text_boxes_border_opacity | divided_by: 100.0 }};
        --text-boxes-border-width: {{ settings.text_boxes_border_thickness }}px;
        --text-boxes-radius: {{ settings.text_boxes_radius }}px;
        --text-boxes-shadow-opacity: {{ settings.text_boxes_shadow_opacity | divided_by: 100.0 }};
        --text-boxes-shadow-visible: {% if settings.text_boxes_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --text-boxes-shadow-horizontal-offset: {{ settings.text_boxes_shadow_horizontal_offset }}px;
        --text-boxes-shadow-vertical-offset: {{ settings.text_boxes_shadow_vertical_offset }}px;
        --text-boxes-shadow-blur-radius: {{ settings.text_boxes_shadow_blur }}px;

        --buttons-radius: {{ settings.buttons_radius }}px;
        --buttons-radius-outset: {% if settings.buttons_radius > 0 %}{{ settings.buttons_radius | plus: settings.buttons_border_thickness }}{% else %}0{% endif %}px;
        --buttons-border-width: {% if settings.buttons_border_opacity > 0 %}{{ settings.buttons_border_thickness }}{% else %}0{% endif %}px;
        --buttons-border-opacity: {{ settings.buttons_border_opacity | divided_by: 100.0 }};
        --buttons-shadow-opacity: {{ settings.buttons_shadow_opacity | divided_by: 100.0 }};
        --buttons-shadow-visible: {% if settings.buttons_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --buttons-shadow-horizontal-offset: {{ settings.buttons_shadow_horizontal_offset }}px;
        --buttons-shadow-vertical-offset: {{ settings.buttons_shadow_vertical_offset }}px;
        --buttons-shadow-blur-radius: {{ settings.buttons_shadow_blur }}px;
        --buttons-border-offset: {% if settings.buttons_radius > 0 or settings.buttons_shadow_opacity > 0 %}0.3{% else %}0{% endif %}px;

        --inputs-radius: {{ settings.inputs_radius }}px;
        --inputs-border-width: {{ settings.inputs_border_thickness }}px;
        --inputs-border-opacity: {{ settings.inputs_border_opacity | divided_by: 100.0 }};
        --inputs-shadow-opacity: {{ settings.inputs_shadow_opacity | divided_by: 100.0 }};
        --inputs-shadow-horizontal-offset: {{ settings.inputs_shadow_horizontal_offset }}px;
        --inputs-margin-offset: {% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_opacity > 0 %}{{ settings.inputs_shadow_vertical_offset | abs }}{% else %}0{% endif %}px;
        --inputs-shadow-vertical-offset: {{ settings.inputs_shadow_vertical_offset }}px;
        --inputs-shadow-blur-radius: {{ settings.inputs_shadow_blur }}px;
        --inputs-radius-outset: {% if settings.inputs_radius > 0 %}{{ settings.inputs_radius | plus: settings.inputs_border_thickness }}{% else %}0{% endif %}px;

        --variant-pills-radius: {{ settings.variant_pills_radius }}px;
        --variant-pills-border-width: {{ settings.variant_pills_border_thickness }}px;
        --variant-pills-border-opacity: {{ settings.variant_pills_border_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-opacity: {{ settings.variant_pills_shadow_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-horizontal-offset: {{ settings.variant_pills_shadow_horizontal_offset }}px;
        --variant-pills-shadow-vertical-offset: {{ settings.variant_pills_shadow_vertical_offset }}px;
        --variant-pills-shadow-blur-radius: {{ settings.variant_pills_shadow_blur }}px;
      }

      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }

      html {
        box-sizing: border-box;
        font-size: calc(var(--font-body-scale) * 62.5%);
        height: 100%;
      }

      body {
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        grid-template-columns: 100%;
        min-height: 100%;
        margin: 0;
        font-size: 1.5rem;
        letter-spacing: 0.06rem;
        line-height: calc(1 + 0.8 / var(--font-body-scale));
        font-family: var(--font-body);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
      }

      @media screen and (min-width: 750px) {
        body {
          font-size: 1.6rem;
        }
      }
    {% endstyle %}

    {{ 'base.css' | asset_url | stylesheet_tag }}
    {{ 'section-brand-story.css' | asset_url | stylesheet_tag }}
    {{ 'section-value-props.css' | asset_url | stylesheet_tag }}
    {{ 'section-email-capture.css' | asset_url | stylesheet_tag }}
    {{ 'section-featured-packs.css' | asset_url | stylesheet_tag }}
    {{ 'section-footer-contact.css' | asset_url | stylesheet_tag }}
    <link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">

    {%- if settings.cart_type == 'drawer' -%}
      {{ 'component-cart-drawer.css' | asset_url | stylesheet_tag }}
      {{ 'component-cart.css' | asset_url | stylesheet_tag }}
      {{ 'component-totals.css' | asset_url | stylesheet_tag }}
      {{ 'component-price.css' | asset_url | stylesheet_tag }}
      {{ 'component-discounts.css' | asset_url | stylesheet_tag }}
    {%- endif -%}

    {%- unless settings.type_body_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}

    {%- if localization.available_countries.size > 1 or localization.available_languages.size > 1 -%}
      {{ 'component-localization-form.css' | asset_url | stylesheet_tag: preload: true }}
      <script src="{{ 'localization-form.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if settings.predictive_search_enabled -%}
      <link
        rel="stylesheet"
        href="{{ 'component-predictive-search.css' | asset_url }}"
        media="print"
        onload="this.media='all'"
      >
    {%- endif -%}

    <script>
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
    </script>
  </head>

  <body class="gradient{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}">
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {%- if settings.cart_type == 'drawer' -%}
      {%- render 'cart-drawer' -%}
    {%- endif -%}

    {% sections 'header-group' %}

    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}

    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
      };

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      };

      window.quickOrderListStrings = {
        itemsAdded: `{{ 'sections.quick_order_list.items_added.other' | t: quantity: '[quantity]' }}`,
        itemAdded: `{{ 'sections.quick_order_list.items_added.one' | t: quantity: '[quantity]' }}`,
        itemsRemoved: `{{ 'sections.quick_order_list.items_removed.other' | t: quantity: '[quantity]' }}`,
        itemRemoved: `{{ 'sections.quick_order_list.items_removed.one' | t: quantity: '[quantity]' }}`,
        viewCart: `{{- 'sections.quick_order_list.view_cart' | t -}}`,
        each: `{{- 'sections.quick_order_list.each' | t: money: '[money]' }}`,
        min_error: `{{- 'sections.quick_order_list.min_error' | t: min: '[min]' }}`,
        max_error: `{{- 'sections.quick_order_list.max_error' | t: max: '[max]' }}`,
        step_error: `{{- 'sections.quick_order_list.step_error' | t: step: '[step]' }}`,
      };

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        recipientFormExpanded: `{{ 'recipient.form.expanded' | t }}`,
        recipientFormCollapsed: `{{ 'recipient.form.collapsed' | t }}`,
        countrySelectorSearchCount: `{{ 'localization.country_results_count' | t: count: '[count]' }}`,
      };
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if settings.cart_type == 'drawer' -%}
      <script src="{{ 'cart-drawer.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    
    <!-- Contact Smooth Scroll -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      console.log('Contact scroll script loaded');
      
      // Check if contact section exists
      const contactSection = document.getElementById('contact-section');
      console.log('Contact section found:', contactSection);
      
      // Handle any contact links to scroll to contact section
      const contactLinks = document.querySelectorAll('a[href*="contact"], a[href*="#contact"]');
      console.log('Contact links found:', contactLinks.length);
      contactLinks.forEach(link => {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          console.log('Contact link clicked');
          if (contactSection) {
            contactSection.scrollIntoView({ 
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });
      
      // Handle contact tabs/accordions that might contain contact content
      const contactTabs = document.querySelectorAll('[data-contact-tab], .contact-tab');
      console.log('Contact tabs found:', contactTabs.length);
      contactTabs.forEach(tab => {
        tab.addEventListener('click', function(e) {
          console.log('Contact tab clicked');
          // Small delay to allow tab to open first
          setTimeout(() => {
            if (contactSection) {
              contactSection.scrollIntoView({ 
                behavior: 'smooth',
                block: 'start'
              });
            }
          }, 100);
        });
      });
      
      // Handle collapsible tabs with contact content
      const collapsibleTabs = document.querySelectorAll('.product__accordion summary, .accordion summary');
      console.log('Collapsible tabs found:', collapsibleTabs.length);
      collapsibleTabs.forEach(tab => {
        tab.addEventListener('click', function(e) {
          const text = this.textContent.toLowerCase();
          console.log('Tab clicked:', text);
          if (text.includes('contact') || text.includes('support') || text.includes('help')) {
            console.log('Contact-related tab detected, scrolling...');
            setTimeout(() => {
              if (contactSection) {
                contactSection.scrollIntoView({ 
                  behavior: 'smooth',
                  block: 'start'
                });
              }
            }, 200);
          }
        });
      });
      
      // Additional check for any element with contact in the text
      const allElements = document.querySelectorAll('*');
      allElements.forEach(element => {
        const text = element.textContent.toLowerCase();
        if (text.includes('contact') && (element.tagName === 'SUMMARY' || element.tagName === 'BUTTON' || element.classList.contains('tab'))) {
          console.log('Found potential contact element:', element);
          element.addEventListener('click', function(e) {
            console.log('Potential contact element clicked');
            setTimeout(() => {
              if (contactSection) {
                contactSection.scrollIntoView({ 
                  behavior: 'smooth',
                  block: 'start'
                });
              }
            }, 200);
          });
        }
      });
      
      // More aggressive approach - check for any clickable element with contact text
      document.addEventListener('click', function(e) {
        const target = e.target;
        const text = target.textContent.toLowerCase();
        
        console.log('Element clicked:', target.tagName, 'Text:', text.substring(0, 50));
        
        // Check if clicked element or its parent contains contact-related text
        if (text.includes('contact') || text.includes('support') || text.includes('help')) {
          console.log('🎯 Contact-related element clicked:', target, 'Text:', text);
          
          // Check if it's a clickable element
          if (target.tagName === 'SUMMARY' || 
              target.tagName === 'BUTTON' || 
              target.tagName === 'A' ||
              target.classList.contains('tab') ||
              target.closest('summary') ||
              target.closest('button') ||
              target.closest('a')) {
            
            console.log('✅ Contact clickable element detected, scrolling...');
            setTimeout(() => {
              if (contactSection) {
                console.log('📍 Scrolling to contact section...');
                contactSection.scrollIntoView({ 
                  behavior: 'smooth',
                  block: 'start'
                });
              } else {
                console.error('❌ Contact section not found for scrolling');
              }
            }, 300);
          } else {
            console.log('⚠️ Contact text found but not a clickable element');
          }
        }
      });
      
      // Add a test function to manually scroll to contact
      window.scrollToContact = function() {
        console.log('Manual scroll to contact triggered');
        if (contactSection) {
          contactSection.scrollIntoView({ 
            behavior: 'smooth',
            block: 'start'
          });
        } else {
          console.error('Contact section not found!');
        }
      };
      
    });
    </script>
    
    <!-- Enhanced Cart Drawer -->
    {% render 'enhanced-cart-drawer' %}
    
  </body>
</html>
